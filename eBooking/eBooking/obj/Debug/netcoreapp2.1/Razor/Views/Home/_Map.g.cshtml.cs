#pragma checksum "F:\kanna_Projects\E-Hospital\eBooking\eBooking\Views\Home\_Map.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0af7ebad4f5418a1f30bfc2e7e22a968f07fbae3"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home__Map), @"mvc.1.0.view", @"/Views/Home/_Map.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/_Map.cshtml", typeof(AspNetCore.Views_Home__Map))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "F:\kanna_Projects\E-Hospital\eBooking\eBooking\Views\_ViewImports.cshtml"
using eBooking;

#line default
#line hidden
#line 2 "F:\kanna_Projects\E-Hospital\eBooking\eBooking\Views\_ViewImports.cshtml"
using eBooking.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0af7ebad4f5418a1f30bfc2e7e22a968f07fbae3", @"/Views/Home/_Map.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1486a27ce528f0c67af68ac18737b9d6de9d7883", @"/Views/_ViewImports.cshtml")]
    public class Views_Home__Map : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 6928, true);
            WriteLiteral(@"<style>
    #description {
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
    }

    #infowindow-content .title {
        font-weight: bold;
    }

    #infowindow-content {
        display: none;
    }

    #map #infowindow-content {
        display: inline;
    }

    .pac-card {
        margin: 10px 10px 0 0;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
        background-color: #fff;
        font-family: Roboto;
    }

    #pac-container {
        padding-bottom: 12px;
        margin-right: 12px;
    }

    .pac-controls {
        display: inline-block;
        padding: 5px 11px;
    }

        .pac-controls label {
            font-family: Roboto;
            font-size: 13px;
            font-weight: 300;
        }

    #pac-input {
        background-color: #fff;
        font-family: Roboto;
");
            WriteLiteral(@"        font-size: 15px;
        font-weight: 300;
        margin-left: 12px;
        padding: 0 11px 0 13px;
        text-overflow: ellipsis;
        width: 400px;
    }

        #pac-input:focus {
            border-color: #4d90fe;
        }

    #title {
        color: #fff;
        background-color: #4d90fe;
        font-size: 25px;
        font-weight: 500;
        padding: 6px 12px;
    }

    #target {
        width: 345px;
    }
</style>
<script src=""https://polyfill.io/v3/polyfill.min.js?features=default""></script>
<script async src=""https://maps.googleapis.com/maps/api/js?key=AIzaSyBL10YR8UAAUtMdlQs8CEXVZQ-QfCOO0iI&callback=initMap""></script>
<script>
    var map;
    function initMap() {
        // The location of Uluru
        //var uluru = { lat: 9.9261153, lng: 78.11409836 };
        // The map, centered at Uluru

        map = new google.maps.Map(
            document.getElementById('map'),
            {
                zoom: 18,
                center: { la");
            WriteLiteral(@"t: 9.9261153, lng: 78.11409836 },
                mapTypeId: ""roadmap""
            });
        /*var marker = new google.maps.Marker({
            position: { lat: 9.9261153, lng: 78.11409836 },
            map: map,
            title: ""Hello World!""
        });*/
        getData(map);

    }
    function getData(pmap) {
        $.ajax({
            type: 'GET',
            url: $.trim($('#mainParentDiv').attr('data-apiUrl')) + 'Hospital/List',
            async: false,
            cache: false,
            global: false,
            success: function (data) {
                if (data != null) {
                    $.each(data, function (i, value) {
                        var marker = new google.maps.Marker({
                            position: { lat: parseFloat($.trim(value.lat)), lng: parseFloat($.trim(value.lon)) },
                            map: pmap,
                            title: $.trim(value.name),
                            animation: google.maps.Animation.DROP,
   ");
            WriteLiteral(@"                     });
                        var infowindow = new google.maps.InfoWindow({
                            content: ""<h6>"" + marker.title + ""</h6>"" +
                                ""<label> Available Bed :</label> <span class='badge badge-success'>"" + value.bed_ava + ""</span>"" +
                                ""<br>"" +
                                ""<label> Occupied Bed :</label> <span class='badge badge-warning'>"" + value.bed_occ + ""</span>"" +
                                ""<br><button class='btn btn-sm btn-primary'>Click Here To Book</button>""
                        });

                        google.maps.event.addListener(marker, ""click"", function () {
                            infowindow.close();
                            infowindow.open(pmap, marker);
                            fn_loadSpechospData($.trim(value.id));
                        });
                    });
                }
            }
        });
    }
    async function fn_loadSpechospData(id)");
            WriteLiteral(@" {
        $.ajax({
            url: $.trim($('#mainParentDiv').attr('data-apiUrl')) + 'Hospital/List',
            type: 'GET',
            dataType: 'json',
            cache: false,
            async: true,
            success: function (data) {
                $('#divTblHospitalData').empty().append('');
                var tbl = '';
                $.each(data, function (i, value) {
                    if ($.trim(id) == $.trim(value.id)) {
                        var serv = ''
                        if (value.services != null) {
                            $.each(value.services, function (j, ser) {
                                serv += $.trim(ser) + ', ';
                            });
                            serv = $.trim(serv);
                            serv = serv.substring(0, serv.length - 1);
                        }
                        tbl += '<div class=""col mb-4"" id=' + $.trim(value.id) + '>' +
                            '<div class=""card"">' +
               ");
            WriteLiteral(@"             '<div class=""row no-gutters"">' +
                            '<div class=""col-md-4"">' +
                            '<img src=""wwwroot/Image/Hospital/hospital.jpg"" class=""img-fluid img-thumbnail"" style=""width:100%;height:100%"" alt=""..."">' +
                            '</div>' +
                            '<div class=""col-md-8"">' +
                            '<div class=""card-body"">' +
                            '<h5 class=""card-title text-center"">' + $.trim(value.name) + '</h5>' +
                            '<ul class=""list-group list-group-flush text-center"">' +
                            '<li class=""list-group-item"">' + $.trim(serv) + '</li>' +
                            '<li class=""list-group-item""> Mobile Num : ' + $.trim(value.mob_Num) + '</li>' +
                            '<li class=""list-group-item""><span class=""badge-pill badge-success"">Available Bed : ' + $.trim(value.bed_ava) + '</span></li>' +
                            '<li class=""list-group-item""><span class=""bad");
            WriteLiteral(@"ge-pill badge-info"">Occupied Bed : ' + $.trim(value.bed_occ) + '</span></li>' +
                            '<li class=""list-group-item"" id=""rating"">' + fn_loadRating($.trim(value.rating)) + '</li>' +
                            '<li class=""list-group-item""></button><button class=""btn btn-success"" data-toggle=""modal"" data-target=""#exampleModal"" onclick=""fn_Login();"">Book</button></li>' +
                            '</div>' +
                            '</div>' +
                            '</div>' +
                            '</div>' +
                            '</div>';
                    }
                });
                $('#divTblHospitalData').empty().append(tbl);
            },
            error: function (err) { }
        });
    }
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
